# base image
FROM gazebo:latest
#ubuntu:jammy


# added by luca for testing #
# RUN useradd -u 8877 luca
# Change to non-root privilege

#############################


ENV DEBIAN_FRONTEND noninteractive

# install basic indpendence
RUN apt update
RUN apt install -y build-essential
RUN apt install -y cmake git openssh-client git
RUN apt install -y ffmpeg libcanberra-gtk-module mesa-utils
RUN apt install -y libboost-program-options-dev libeigen3-dev swig psmisc

#SOME STUFF ADDED BY LUCA FOR RUNNING THE SIMULATION ON AMD GRAPHICS
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    && rm -rf /var/lib/apt/lists/*RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    xserver-xorg-video-amdgpu \
    && rm -rf /var/lib/apt/lists/*

# Set environment variable to force software rendering (optional)
ENV LIBGL_ALWAYS_SOFTWARE=1

##########
# PYTHON & PIP #

##########
# update python
ARG PYTHON_VERSION=3.8 
RUN apt update
#RUN apt install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt update

# INSTALL PYTHON 3.10 AND MAKE IT DEFAULT
RUN apt install -y python3.10 python3.10-venv python3.10-dev
RUN ls -la /usr/bin/python3
RUN rm /usr/bin/python3
RUN ln -s python3.10 /usr/bin/python3

# create list of alternative python interpreters
#RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python$PYTHON_VERSION 1 && \
#    update-alternatives --config python3 && \
#    rm /usr/bin/python3 && \
#    ln -s python$PYTHON_VERSION /usr/bin/python3
    
RUN apt install python3-numpy

##########
# OPENCV C++ and Python
##########
RUN apt install -y libopencv-dev python3-opencv

############
#   INSTALL ROBOTOLOGY FROM SOURCE
############

RUN mkdir -p /usr/local/src/robot
ARG SOURCE_FOLDER=/usr/local/src/robot
ARG BUILD_TYPE=Release

# Install yarp dependencies
RUN apt install -y \
        libgsl-dev \
        libedit-dev \
        libace-dev \
        libeigen3-dev
        
RUN apt update && apt -y upgrade


RUN git config --global user.name summerschool
RUN git config --global user.email "summer@school.com"

# Install YARP
RUN cd $SOURCE_FOLDER && \
    git clone https://github.com/robotology/robotology-superbuild &&\
    cd robotology-superbuild && bash ./scripts/install_apt_dependencies.sh && mkdir build && cd build && \ 
    cmake .. -D ROBOTOLOGY_USES_GAZEBO=ON && \
    make -j$(nproc)

RUN echo "source /usr/local/src/robot/robotology-superbuild/build/install/share/robotology-superbuild/setup.sh" >> /root/.bashrc

#RUN yarp check
#EXPOSE 10000/tcp 10000/udp

# make yarp's python binding visible to python interpreter
#ENV PYTHONPATH $SOURCE_FOLDER/yarp/build/lib/python3:$PYTHONPATH

# Some QT-Apps don't show controls without this
ENV QT_X11_NO_MITSHM 1

    
#RUN echo "/usr/local/lib" > /etc/ld.so.conf.d/99local.conf && ldconfig
    
#RUN apt autoremove && apt clean
#RUN rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*

WORKDIR $SOURCE_FOLDER

#USER luca

